name: jenkins-ecs-docker-build

env:
  IMAGE_NAME: shanali38/aws-terraform-jenkins

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - "main"
    paths:
      - "docker/*"
  pull_request:
    types:
      - closed
    branches:
      - "main"
    paths:
      - "docker/*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  docker-build:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: ./terraform/jenkins-ecs

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Shorten Git SHA for Tagging
        run: echo GITHUB_SHA_SHORT=`(echo ${GITHUB_SHA} | cut -c1-6)` >> $GITHUB_ENV

      - name: Get Date
        run: echo DATE=`(date +"%Y.%m.%d")` >> $GITHUB_ENV

      - name: Set Full Build Name
        run: echo DOCKER_IMAGE_BUILD_NAME=${IMAGE_NAME}:${DATE}.${GITHUB_SHA_SHORT} >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          file: ./docker/Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE_BUILD_NAME }},${{ env.IMAGE_NAME }}:latest

  terraform-apply:
    needs: docker-build

    defaults:
      run:
        shell: bash
        working-directory: ./terraform/jenkins-ecs

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Install the preferred version of Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.2.0

      # Runs a set of commands using the runners shell
      - name: Check Terraform Install
        run: terraform -version

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        id: init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform init

      # On push to main, build or change infrastructure according to Terraform configuration files
      - name: Terraform Apply
        #if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: terraform apply -var="docker_image=${{ env.DOCKER_IMAGE_BUILD_NAME }}" -auto-approve
